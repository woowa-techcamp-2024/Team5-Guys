server {
    listen 80;
    listen [::]:80;
    server_name www.logbat.info logbat.info api.logbat.info sdk.logbat.info view.logbat.info;

    return 301 https://$host$request_uri; # HTTP 요청을 HTTPS로 리디렉션
    # managed by Certbot
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name www.logbat.info logbat.info;

    # managed by Certbot
    include /etc/nginx/snippets/managed-by-Certbot.conf;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    location / {
        try_files $uri $uri/ =404;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name api.logbat.info;

    # managed by Certbot
    include /etc/nginx/snippets/managed-by-Certbot.conf;

    include /etc/nginx/snippets/private-ip.conf;

    location /logs {
        proxy_pass $logbat_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

	# CORS 설정
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,app-id' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,app-id' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }
    }

    location / {
        proxy_pass $logbat_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name sdk.logbat.info;

    # managed by Certbot
    include /etc/nginx/snippets/managed-by-Certbot.conf;

    root /var/www/sdk;  # 정적 파일이 있는 경로로 설정하세요

    location / {
        try_files $uri $uri/ =404;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name view.logbat.info;

    # managed by Certbot
    include /etc/nginx/snippets/managed-by-Certbot.conf;

    include /etc/nginx/snippets/private-ip.conf;

    location / {
        proxy_pass $logbat_view_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}