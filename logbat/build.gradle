plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'info'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // SpringBoot Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // SpringBoot JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // SpringBoot Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.1'
    // MySQL Connector
    runtimeOnly 'com.mysql:mysql-connector-j'
    // SpringBoot Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/config/**',
                    '**/Application*',
                    '**/*$*',
                    '**/dto/**',
                    '**/entity/**'
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.90
            }
        }
        rule {
            element = 'CLASS'
            excludes = [
                    '**/config/**',
                    '**/Application*',
                    '**/*$*',
                    '**/dto/**',
                    '**/entity/**'
            ]
        }
    }
}